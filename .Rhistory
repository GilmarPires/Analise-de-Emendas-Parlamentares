library(grid)
# Converter a coluna Valor para numérica e ajustar para milhões de R$
df_milhoes <- df %>%
mutate(Valor = as.numeric(Valor) / 1e6) %>%
filter(Valor != 0) # Filtrar valores zero
# Criar uma tabela de significados das siglas
siglas <- tibble(
`Unidade Executora` = c("SNLGBTQIA+", "SNDCA", "SNDH", "SNDPD", "SNDPI", "AEDH", "FNDCA", "ADMV", "CNDH", "CNDPI"),
Significado = c(
"Sec. Nac. dos Direitos das Pessoas LGBTQIA+", "Sec. Nac. dos Direitos da Criança e do Adolescente",
"Sistema Nac. de Direitos Humanos", "Sec. Nac. dos Direitos da Pessoa com Deficiência", "Sec. Nac. dos Direitos da Pessoa Idosa",
"Assessoria Especial de Educação e Cultura em Direitos Humanos", "Fundo Nac. para Criança e Adolescente",
"Assessoria Especial de Defesa da Democracia, Memória e Verdade", "Conselho Nac. de Direitos Humanos",
"Conselho Nac. dos Direitos da Pessoa Idosa"
)
)
# Gráfico de barras
p <- df_milhoes %>%
group_by(`Unidade Executora`) %>%
summarise(total_emendas = sum(Valor, na.rm = TRUE)) %>%
ggplot(aes(x = reorder(`Unidade Executora`, total_emendas), y = total_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = paste0("R$", round(total_emendas, 2))), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "Área", y = "", title = "Valor Total das Emendas por Área em Milhões de R$") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = "darkgreen", face = "bold"), # Rótulos em verde escuro negrito
axis.text = element_text(color = "darkgreen", face = "bold"), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = "darkgreen", face = "bold"), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5) # Título do gráfico em verde escuro negrito
)
# Tabela com significados das siglas com fonte menor
table_grob <- tableGrob(siglas, theme = ttheme_default(base_size = 8))
# Plotar gráfico e tabela juntos, ajustando a altura da tabela de siglas
grid.arrange(p, table_grob, ncol = 1, heights = c(1, 0.5))
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readxl)
library(gridExtra)
library(ggplot2)
library(dplyr)
# Agrupar os dados e contar a quantidade de emendas por UF
df_quantidade <- df %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
filter(quantidade_emendas != 0) # Filtrar valores zero
# Criar o gráfico de barras com estilo personalizado
ggplot(df_quantidade, aes(x = reorder(UF, quantidade_emendas), y = quantidade_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = quantidade_emendas), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "UF", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por UF") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = "darkgreen", face = "bold"), # Rótulos em verde escuro negrito
axis.text = element_text(color = "darkgreen", face = "bold"), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = "darkgreen", face = "bold"), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5) # Título do gráfico em verde escuro negrito
)
View(df)
ibrary(ggplot2)
# Agrupar os dados e contar a quantidade de emendas por UF
df_quantidade <- df %>%
group_by(Autor) %>%
summarise(Autor = n()) %>%
filter(Autor != 0) # Filtrar valores zero
# Criar o gráfico de barras com estilo personalizado
ggplot(df_quantidade, aes(x = reorder(UF, Autor), y = Autor)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = Autor), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "UF", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por UF") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = "darkgreen", face = "bold"), # Rótulos em verde escuro negrito
axis.text = element_text(color = "darkgreen", face = "bold"), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = "darkgreen", face = "bold"), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5) # Título do gráfico em verde escuro negrito
)
# Agrupar os dados e contar a quantidade de emendas por UF
df_quantidade <- df %>%
group_by(Autor) %>%
summarise(Autor = n()) %>%
filter(Autor != 0) # Filtrar valores zero
# Criar o gráfico de barras com estilo personalizado
ggplot(df_quantidade, aes(x = reorder(UF, Autor), y = Autor)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = Autor), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "Autor", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por UF") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = "darkgreen", face = "bold"), # Rótulos em verde escuro negrito
axis.text = element_text(color = "darkgreen", face = "bold"), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = "darkgreen", face = "bold"), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5) # Título do gráfico em verde escuro negrito
)
# Criar o gráfico de barras com estilo personalizado
ggplot(df_quantidade, aes(x = reorder(Autor, Autor), y = Autor)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = Autor), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "Autor", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por UF") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = "darkgreen", face = "bold"), # Rótulos em verde escuro negrito
axis.text = element_text(color = "darkgreen", face = "bold"), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = "darkgreen", face = "bold"), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5) # Título do gráfico em verde escuro negrito
)
# Contar a quantidade de emendas por autor
df_emendas_por_autor <- df %>%
filter(!is.na(Autor)) %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
top_n(30, quantidade_emendas)
# Contar a quantidade de emendas por autor
df_emendas_por_autor <- df %>%
filter(!is.na(Autor)) %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
top_n(30, quantidade_emendas)
geom_bar(df_emendas_por_autor, aes(x = reorder(Autor, quantidade_emendas), y = quantidade_emendas), stat = "identity") +
geom_text(aes(label = quantidade_emendas), vjust = -0.5, size = 3, color = "darkgreen") +
coord_flip() +
labs(x = "Político", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por Político") +
theme_minimal(base_size = 15) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "lightyellow", color = NA),
plot.background = element_rect(fill = "lightyellow", color = NA),
text = element_text(color = "darkgreen", face = "bold"),
axis.text = element_text(color = "darkgreen", face = "bold"),
axis.title = element_text(color = "darkgreen", face = "bold"),
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5)
))
# Contar a quantidade de emendas por autor
df_emendas_por_autor <- df %>%
filter(!is.na(Autor)) %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
top_n(30, quantidade_emendas)
geom_bar(df_emendas_por_autor, aes(x = reorder(Autor, quantidade_emendas), y = quantidade_emendas), stat = "identity") +
geom_text(aes(label = quantidade_emendas), vjust = -0.5, size = 3, color = "darkgreen") +
coord_flip() +
labs(x = "Político", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por Político") +
theme_minimal(base_size = 15) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "lightyellow", color = NA),
plot.background = element_rect(fill = "lightyellow", color = NA),
text = element_text(color = "darkgreen", face = "bold"),
axis.text = element_text(color = "darkgreen", face = "bold"),
axis.title = element_text(color = "darkgreen", face = "bold"),
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5)
))
geom_bar(df_emendas_por_autor, aes(x = reorder(Autor, quantidade_emendas), y = quantidade_emendas), stat = "identity") +
geom_text(aes(label = quantidade_emendas), vjust = -0.5, size = 3, color = "darkgreen") +
coord_flip() +
labs(x = "Político", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por Político") +
theme_minimal(base_size = 15) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "lightyellow", color = NA),
plot.background = element_rect(fill = "lightyellow", color = NA),
text = element_text(color = "darkgreen", face = "bold"),
axis.text = element_text(color = "darkgreen", face = "bold"),
axis.title = element_text(color = "darkgreen", face = "bold"),
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5)
))
# Contar a quantidade de emendas por autor
df_emendas_por_autor <- df %>%
filter(!is.na(Autor)) %>%
group_by(Autor) %>%
summarise(Autor = n()) %>%
top_n(30, Autor)
### plotar o gráfico de barras com a quantidade de emendas por autor
geom_bar(df_emendas_por_autor, aes(x = reorder(Autor, quantidade_emendas), y = quantidade_emendas), stat = "identity") +
geom_text(aes(label = quantidade_emendas), vjust = -0.5, size = 3, color = "darkgreen") +
coord_flip() +
labs(x = "Político", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por Político") +
theme_minimal(base_size = 15) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "lightyellow", color = NA),
plot.background = element_rect(fill = "lightyellow", color = NA),
text = element_text(color = "darkgreen", face = "bold"),
axis.text = element_text(color = "darkgreen", face = "bold"),
axis.title = element_text(color = "darkgreen", face = "bold"),
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5)
))
geom_bar(df_emendas_por_autor, aes(x = reorder(Autor, Autor), y = Autor), stat = "identity") +
geom_text(aes(label = Autor), vjust = -0.5, size = 3, color = "darkgreen") +
coord_flip() +
labs(x = "Político", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por Político") +
theme_minimal(base_size = 15) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "lightyellow", color = NA),
plot.background = element_rect(fill = "lightyellow", color = NA),
text = element_text(color = "darkgreen", face = "bold"),
axis.text = element_text(color = "darkgreen", face = "bold"),
axis.title = element_text(color = "darkgreen", face = "bold"),
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5)
))
# Contar a quantidade de emendas por autor
df_emendas_por_autor <- df %>%
filter(!is.na(Autor)) %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
top_n(30, quantidade_emendas)
### plotar o gráfico de barras com a quantidade de emendas por autor
geom_bar(df_emendas_por_autor, aes(x = reorder(Autor, quantidade_emendas), y = quantidade_emendas), stat = "identity") +
geom_text(aes(label = quantidade_emendas), vjust = -0.5, size = 3, color = "darkgreen") +
coord_flip() +
labs(x = "Político", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por Político") +
theme_minimal(base_size = 15) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "lightyellow", color = NA),
plot.background = element_rect(fill = "lightyellow", color = NA),
text = element_text(color = "darkgreen", face = "bold"),
axis.text = element_text(color = "darkgreen", face = "bold"),
axis.title = element_text(color = "darkgreen", face = "bold"),
plot.title = element_text(color = "darkgreen", face = "bold", hjust = 0.5)
))
library(ggplot2)
library(dplyr)
# Agrupar os dados e contar a quantidade de emendas por UF
df_quantidade <- df %>%
group_by(UF) %>%
summarise(quantidade_emendas = n()) %>%
filter(quantidade_emendas != 0) # Filtrar valores zero
# Criar o gráfico de barras com estilo personalizado
ggplot(df_quantidade, aes(x = reorder(UF, quantidade_emendas), y = quantidade_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = quantidade_emendas), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "UF", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por UF") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos em verde escuro negrito
axis.text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = 'darkgreen', face = 'bold'), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = 'darkgreen', face = 'bold', hjust = 0.5) # Título do gráfico em verde escuro negrito
)
# Agrupar os dados e contar a quantidade de emendas por UF
df_quantidade <- df %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
filter(quantidade_emendas != 0) # Filtrar valores zero
# Agrupar os dados e contar a quantidade de emendas por Autor
df_quantidade <- df %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
filter(quantidade_emendas != 0) # Filtrar valores zero
# Criar o gráfico de barras com estilo personalizado
ggplot(df_quantidade, aes(x = reorder(Autor, quantidade_emendas), y = quantidade_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = quantidade_emendas), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "Autor", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por UF") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos em verde escuro negrito
axis.text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = 'darkgreen', face = 'bold'), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = 'darkgreen', face = 'bold', hjust = 0.5) # Título do gráfico em verde escuro negrito
)
library(ggplot2)
library(dplyr)
# Agrupar os dados e contar a quantidade de emendas por Autor
df_quantidade <- df %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
filter(quantidade_emendas != 0) %>% # Filtrar valores zero
top_n(30, quantidade_emendas) # Selecionar os 30 autores com maior quantidade de emendas
# Criar o gráfico de barras com estilo personalizado
ggplot(df_quantidade, aes(x = reorder(Autor, quantidade_emendas), y = quantidade_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = quantidade_emendas), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "Autor", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por Autor") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos em verde escuro negrito
axis.text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = 'darkgreen', face = 'bold'), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = 'darkgreen', face = 'bold', hjust = 0.5) # Título do gráfico em verde escuro negrito
)
ggplot(df_quantidade, aes(x = quantidade_emendas)) +
geom_histogram(fill = "darkgreen", color = "white", bins = 30) + # Cor das barras em verde escuro
geom_vline(aes(xintercept = mean(quantidade_emendas)), color = "red", linetype = "dashed", size = 1) + # Linha vertical na média
geom_text(aes(x = mean(quantidade_emendas), y = 10, label = paste0("Média: ", round(mean(quantidade_emendas), 2))), color = "red", size = 5) + # Rótulo da média
labs(x = "Quantidade de Emendas", y = "Frequência", title = "Histograma da Quantidade de Emendas Parlamentares por Autor") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos em verde escuro negrito
axis.text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = 'darkgreen', face = 'bold'), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = 'darkgreen', face = 'bold', hjust = 0.5) # Título do gráfico em verde escuro negrito
)
# Agrupar os dados e contar a quantidade de emendas por Autor
df_quantidade <- df %>%
group_by(Autor) %>%
summarise(quantidade_emendas = n()) %>%
filter(quantidade_emendas != 0) %>% # Filtrar valores zero
top_n(30, quantidade_emendas) # Selecionar os 30 autores com maior quantidade de emendas
# Criar o gráfico de barras com estilo personalizado
ggplot(df_quantidade, aes(x = reorder(Autor, quantidade_emendas), y = quantidade_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = quantidade_emendas), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "Autor", y = "Quantidade de Emendas", title = "Quantidade de Emendas Parlamentares por Autor") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos em verde escuro negrito
axis.text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = 'darkgreen', face = 'bold'), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = 'darkgreen', face = 'bold', hjust = 0.5) # Título do gráfico em verde escuro negrito
)
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readxl)
library(gridExtra)
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readxl)
library(gridExtra)
knitr::opts_chunk$set(echo = F)
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readxl)
library(gridExtra)
library(ggplot2)
library(dplyr)
# Converter a coluna Valor para numérica e ajustar para milhões de R$
df_milhoes <- df %>%
mutate(Valor = as.numeric(Valor) / 1e6) %>%
filter(Valor != 0) # Filtrar valores zero
# Agrupar os dados e somar os valores das emendas por instituição
df_instituicoes <- df_milhoes %>%
group_by(`Unidade Executora`) %>%
summarise(total_emendas = sum(Valor, na.rm = TRUE))
# Criar o gráfico de barras com estilo personalizado
ggplot(df_instituicoes, aes(x = reorder(`Unidade Executora`, total_emendas), y = total_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = paste0("R$", round(total_emendas, 2))), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "Instituição", y = "Valor (Milhões de R$)", title = "Recursos das Emendas Parlamentares por Instituição") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos em verde escuro negrito
axis.text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = 'darkgreen', face = 'bold'), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = 'darkgreen', face = 'bold', hjust = 0.5) # Título do gráfico em verde escuro negrito
)
View(df)
# Converter a coluna Valor para numérica e ajustar para milhões de R$
df_milhoes <- df %>%
mutate(Valor = as.numeric(Valor) / 1e6) %>%
filter(Valor != 0) # Filtrar valores zero
# Agrupar os dados e somar os valores das emendas por instituição
df_instituicoes <- df_milhoes %>%
group_by(`Modalidade`) %>%
summarise(total_emendas = sum(Valor, na.rm = TRUE))
# Criar o gráfico de barras com estilo personalizado
ggplot(df_instituicoes, aes(x = reorder(`Modalidade`, total_emendas), y = total_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = paste0("R$", round(total_emendas, 2))), hjust = -0.1, size = 3, color = "darkgreen") + # Rótulos em verde
coord_flip() +
labs(x = "Instituição", y = "Valor (Milhões de R$)", title = "Recursos das Emendas Parlamentares por Instituição") +
theme_minimal(base_size = 15) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos em verde escuro negrito
axis.text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = 'darkgreen', face = 'bold'), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = 'darkgreen', face = 'bold', hjust = 0.5) # Título do gráfico em verde escuro negrito
)
# Criar o gráfico de barras com rótulos simplificados (números)
p <- ggplot(df_instituicoes, aes(x = reorder(numero, total_emendas), y = total_emendas)) +
geom_col(fill = "darkgreen") + # Cor das barras em verde escuro
geom_text(aes(label = paste0("R$", round(total_emendas, 2))),
hjust = -0.2, size = 3, color = "darkgreen") + # Rótulos fora das barras
coord_flip() +
labs(x = "", y = "Valor (Milhões de R$)", title = "Recursos das Emendas por Modalidade") +
theme_minimal(base_size = 10) + # Aumentar o tamanho da fonte
theme(
panel.grid.major = element_blank(), # Remover linhas de grade maiores
panel.grid.minor = element_blank(), # Remover linhas de grade menores
panel.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
plot.background = element_rect(fill = "lightyellow", color = NA), # Fundo amarelo fraco
text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos em verde escuro negrito
axis.text = element_text(color = 'darkgreen', face = 'bold'), # Rótulos dos eixos em verde escuro negrito
axis.title = element_text(color = 'darkgreen', face = 'bold'), # Título dos eixos em verde escuro negrito
plot.title = element_text(color = 'darkgreen', face = 'bold', hjust = 0.5) # Título do gráfico em verde escuro negrito
)
install.packages("hexSticker")
library(hexSticker)
# Criar um gráfico simples com ggplot2
p <- ggplot(mtcars, aes(mpg, wt)) +
geom_point(color = "darkblue", size = 3) +
labs(title = "My Logo") +
theme_void() + # Remove eixos e rótulos
theme(plot.title = element_text(size = 10, face = "bold"))
# Criar um adesivo hexagonal com hexSticker
sticker(p, package = "MyPackage", p_size = 8, s_x = 1, s_y = 0.75, s_width = 1.2, s_height = 1,
filename = "my_logo.png", h_fill = "#F5DEB3", h_color = "#6B8E23")
# Criar um gráfico simples com ggplot2
p <- ggplot(mtcars, aes(mpg, wt)) +
geom_point(color = "darkblue", size = 3) +
labs(title = "Gilmar_Pires") +
theme_void() + # Remove eixos e rótulos
theme(plot.title = element_text(size = 10, face = "bold"))
# Criar um adesivo hexagonal com hexSticker
sticker(p, package = "MyPackage", p_size = 8, s_x = 1, s_y = 0.75, s_width = 1.2, s_height = 1,
filename = "my_logo.png", h_fill = "#F5DEB3", h_color = "#6B8E23")
View(p)
# Criar um gráfico simples com ggplot2
p <- ggplot(mtcars, aes(mpg, wt)) +
geom_point(color = "darkblue", size = 3) +
labs(title = "Gilmar_Pires") +
theme_void() + # Remove eixos e rótulos
theme(plot.title = element_text(size = 10, face = "bold"))
# Criar um adesivo hexagonal com hexSticker usando dispositivo png
sticker(p, package = "MyPackage", p_size = 8, s_x = 1, s_y = 0.75, s_width = 1.2, s_height = 1,
filename = "my_logo.png", h_fill = "#F5DEB3", h_color = "#6B8E23", device = "png")
# Criar um gráfico simples com ggplot2
p <- ggplot(mtcars, aes(mpg, wt)) +
geom_point(color = "darkblue", size = 3) +
labs(title = "Gilmar_Pires") +
theme_void() + # Remove eixos e rótulos
theme(plot.title = element_text(size = 10, face = "bold"))
# Criar um adesivo hexagonal com hexSticker usando dispositivo png
sticker(p, package = "MyPackage", p_size = 8, s_x = 1, s_y = 0.75, s_width = 1.2, s_height = 1,
filename = "Gilmar_Pires.png", h_fill = "#F5DEB3", h_color = "#6B8E23", device = "png")
# Criar um adesivo hexagonal com hexSticker usando dispositivo png
sticker(p, package = "Gilmar_Pires", p_size = 8, s_x = 1, s_y = 0.75, s_width = 1.2, s_height = 1,
filename = "Gilmar_Pires.png", h_fill = "#F5DEB3", h_color = "#6B8E23", device = "png")
View(p)
View(p)
View(p)
rm(p) # Remover o objeto ggplot2
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readxl)
library(gridExtra)
